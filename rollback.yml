# =====================================================================================================
# PLAYBOOK DE ROLLBACK TOTAL: Desfaz as configurações do Orion Workstation
# =====================================================================================================
# Descrição:
#   Este playbook executa um rollback completo do Orion Workstation, removendo
#   todos os pacotes listados nas roles, independentemente de estarem instalados ou não.
#
#   Resumo:
#   - O parâmetro `ignore_errors: true` é utilizado nas tarefas de desinstalação para garantir
#       que o playbook continue executando mesmo que algum pacote não esteja instalado.
#       Isso evita que o processo de rollback seja interrompido por falhas não críticas.
#
#   Funcionamento:
#     - Tenta desinstalar todas as ações realizadas nas roles, mesmo que alguns deles nunca tenham
#       sido instalados (por exemplo, se apenas o AWS CLI foi instalado, ainda assim
#       tentará remover Azure CLI e Google Cloud CLI).
#     - Limpa dependências não utilizadas após a remoção dos pacotes.
#
#   Atenção:
#     - Recomenda-se fortemente realizar backup dos dados importantes antes de executar.
# =====================================================================================================

- name: ORION WORKSTATION - ROLLBACK TOTAL
  hosts: localhost
  connection: local

  vars_files:
    - "roles/packages_optional/defaults/main.yml"
    - "roles/oh_my_zsh/defaults/main.yml"
    - "roles/docker_container/defaults/main.yml"
    - "roles/kubernetes_orchestration/defaults/main.yml"

  pre_tasks:
    - name: "SETUP | Recolhe factos sobre os serviços do sistema"
      become: true
      ansible.builtin.service_facts:

  tasks:
    - name: "SEGURANCA | Muda o shell padrão para BASH"
      become: true
      ansible.builtin.user:
        name: "{{ ansible_user_id }}"
        shell: /bin/bash

    - name: "PACKAGES | Reverte a instalação dos pacotes opcionais"
      become: true
      ansible.builtin.apt:
        name: "{{ item }}"
        state: absent
        purge: true
      ignore_errors: true
      loop: "{{ optional_packages_purge }}"

    - name: "SHELL | Reverte a instalação e configuração do Oh My Zsh"
      block:
        - name: Remove arquivos e diretórios do Zsh
          ansible.builtin.file:
            path: "{{ item }}"
            state: absent
          loop: "{{ oh_my_zsh_paths_to_remove }}"

        - name: Desinstala os pacotes de shell
          become: true
          ansible.builtin.apt:
            name: "{{ zsh_packages }}"
            state: absent
            purge: true
      ignore_errors: true

    - name: "DOCKER | Reverte a instalação e configuração completa"
      block:
        - name: Para e desabilita os serviços (se existirem)
          become: true
          ansible.builtin.systemd:
            name: "{{ item }}"
            state: stopped
            enabled: no
          loop: "{{ docker_service }}"
          when: item in ansible_facts.services

        - name: Remove os pacotes
          become: true
          ansible.builtin.apt:
            name: "{{ packages_docker }}"
            state: absent
            purge: true
        
        - name: Remove o grupo 'docker'
          become: true
          ansible.builtin.group:
            name: docker
            state: absent
        
        - name: Remove diretórios e configurações
          become: true
          ansible.builtin.file:
            path: "{{ item }}"
            state: absent
          loop: "{{ docker_paths_to_remove }}"

      ignore_errors: true

    - name: "KUBERNETES | Reverte a instalação completa do ecossistema"
      block:
        - name: Remove os pacotes (incluindo 'held')
          become: true
          ansible.builtin.apt:
            name: "{{ kubernetes_packages }}"
            state: absent
            purge: true
            allow_change_held_packages: true

        - name: Remove binários e configurações
          become: true
          ansible.builtin.file:
            path: "{{ item }}"
            state: absent
          loop: "{{ kubernetes_paths_to_remove }}"

      ignore_errors: true

    - name: "CLEANUP | Remove pacotes não utilizados e limpa o cache do APT"
      become: true
      ansible.builtin.apt:
        autoremove: true
        autoclean: true

    - name: "SYSTEM | Força o recarregamento do daemon do systemd"
      become: true
      ansible.builtin.systemd:
        daemon_reload: yes
